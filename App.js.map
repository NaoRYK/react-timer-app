{"mappings":"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","sources":["src/App.js","src/Pomodoro.jsx","src/modes.jsx"],"sourcesContent":["import React from 'react'\r\nimport {render} from 'react-dom'\r\nimport Pomodoro from './Pomodoro'\r\n\r\nconst styleRoot = document.querySelector(':root');\r\nconst App = () => {\r\n  return (\r\n    <Pomodoro styleRoot={styleRoot}></Pomodoro>\r\n  )\r\n}\r\n\r\nrender(React.createElement(App), document.getElementById(\"root\"));","import React, {useEffect, useState} from 'react'\r\n\r\nimport { Modes } from './modes';\r\n\r\nfunction padTime(time){\r\n  return time.toString().padStart(2,\"0\");\r\n\r\n}\r\n\r\nconst Pomodoro = (styleRoot) => {\r\n\r\n  const [title, setTitle] = useState(\"CronÃ³metro\")\r\n  const [timeLeft, settimeLeft] = useState(25 * 60)\r\n  const [isRunning, setisRunning] = useState(false)\r\n  const [isDark,setIsDark] = useState(false);\r\n\r\n  const minutes = padTime(Math.floor(timeLeft / 60))\r\n  const seconds = padTime(Math.floor(timeLeft - minutes * 60))\r\n\r\n\r\n  const startTimer = () =>{\r\n    setTitle(\"Concentrate!!\")\r\n    setisRunning(true);\r\n  }\r\n\r\n  const stopTimer = () =>{\r\n    setTitle(\"Esperamos...\")\r\n    setisRunning(false)\r\n\r\n  }\r\n\r\n  const resetTimer = () =>{\r\n    setTitle(\"Inicia el contador para comenzar\")\r\n    setisRunning(false)\r\n    settimeLeft(25*60)\r\n  }\r\n  useEffect(() => {\r\n\r\n    let interval;\r\n    if(isRunning){\r\n      interval = setInterval(() =>{\r\n\r\n        settimeLeft((time)=>{\r\n          return time-1;\r\n        })\r\n      \r\n      },1000) \r\n    }\r\n  \r\n    return () => {\r\n      clearInterval(interval);\r\n    }\r\n  }, [isRunning])\r\n  \r\n\r\n  return (\r\n\r\n\r\n    <div className='container'>\r\n\r\n      <Modes propSetIsDark={setIsDark} propIsDark={isDark} styleRoot={styleRoot} ></Modes>\r\n\r\n      <h1>{title}</h1>\r\n      <div>\r\n        <span className='textSpan'>\r\n          {minutes}\r\n        </span>\r\n\r\n        <span className='textSpan'>\r\n          :\r\n        </span>\r\n\r\n        <span className='textSpan'>\r\n          {seconds}\r\n        </span>\r\n\r\n      </div>\r\n\r\n      <div className='buttons-container'>\r\n        { !isRunning && <button onClick={startTimer}>Iniciar</button>}\r\n        {isRunning && <button onClick={stopTimer}>Detener</button>}\r\n        <button onClick={resetTimer}>Resetear</button>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pomodoro","import React from 'react'\r\nimport \"./modes.css\"\r\n\r\n\r\n\r\nfunction Modes(propIsDark, propSetIsDark,styleRoot){\r\n\r\nvar sheet = document.styleSheets[0];\r\n    \r\n    console.log(propIsDark)\r\n    console.log(propSetIsDark)\r\n\r\n\r\n\r\n    if(propIsDark.propIsDark === true){\r\n\r\n        document.documentElement.style.setProperty('--backgroundWhite',\"#303030\");\r\n        document.documentElement.style.setProperty('--defaultBlack',\"#FFFFFF\");\r\n       \r\n        return(\r\n\r\n\r\n            <div className='modes' onClick={()=>{\r\n                console.log(\"A\")\r\n                propIsDark.propSetIsDark(false)\r\n            }}>\r\n\r\n                <p>Modo claro</p>\r\n                <div alt=\"imagen_sol\" id='sol'></div>\r\n            </div>\r\n        )\r\n    }\r\n    else if(propIsDark.propIsDark === false){\r\n        document.documentElement.style.setProperty('--backgroundWhite',\"#D9D9D9\");\r\n        document.documentElement.style.setProperty('--defaultBlack',\"#000000\");\r\n\r\n        return(\r\n\r\n            <div className='modes' onClick={()=>{\r\n            \r\n                propIsDark.propSetIsDark(true)\r\n            }}>\r\n\r\n                <p>Modo oscuro</p>\r\n                    \r\n                <div alt=\"imagen_luna\" id='luna'></div>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport {Modes};"],"names":[],"version":3,"file":"App.js.map"}